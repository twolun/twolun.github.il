/*所有学科通用js
 * 1.修改为原生JS，在页面渲染之前就执行
 * 2.加入运行环境判断
 * 3.根据createjs创建动画 2016.8.30 v1.1
 * v1.1
 * */
if(isElectron()&&isServer()){//解决课件大师字体缓存跨域报错问题
 var fontStyle = document.createElement("style");
 fontStyle.innerHTML = '@font-face {font-family: "FZY3JW";src: url("http://localhost:3001/courseware/font/fzy3jw.ttf");}@font-face {font-family: "FZY4JW";src: url("http://localhost:3001/courseware/font/fzy4jw.ttf");}'
 document.head.appendChild(fontStyle);
}
/**是否是electron环境*/
function isElectron(){
 var sUserAgent = navigator.userAgent.toLowerCase();
 return sUserAgent.indexOf("electron")>-1&&sUserAgent.indexOf("h5project")>-1;
}
/**是否是服务器远程运行环境*/
function isServer(){
 return window.location.host!="";
}

/**根据createjs创建动画*/
function createAnimation(dom_id,path,type,id,func){
 init(dom_id,path,type,id,func);
 var  canvas, stage, exportRoot;

 function init(dom_id,path,type,id,func) {
  canvas = document.getElementById(dom_id);
  images = images||{};
  ss = ss||{};
  var loader = new createjs.LoadQueue(false);
  loader.addEventListener("fileload", function(evt){
   handleFileLoad(evt,1)
  });
  loader.addEventListener("complete", function(evt){
   handleComplete(evt,id,func)
  });

  loader.loadFile({src:path, type:type, id:id}, true);
  loader.loadManifest(lib.properties.manifest);
 }

 function handleFileLoad(evt,i) {
  if (evt.item.type == "image") { images[evt.item.id] = evt.result; }
  console.log(i);
 }

 function handleComplete(evt,id,func) {
  var queue = evt.target;
  ss[id] = queue.getResult(id);
  exportRoot = eval(func);
  stage = new createjs.Stage(canvas);
  stage.addChild(exportRoot);
  stage.update();
  createjs.Ticker.setFPS(lib.properties.fps);
  createjs.Ticker.addEventListener("tick", stage);
 }
}
/*
 *  pdf转图片模板改名
 *  _name：string 名称
 *  anfeng 2016-9-9
 */
function setTitleName(_name){
 document.getElementById("titleName").innerText = _name;
 document.title = _name;
}